server.port=3353
spring.profiles.active=dev

#activemq
spring.activemq.broker-url=tcp://127.0.0.1:61617
spring.activemq.user=admin
spring.activemq.password=admin
# 在考虑结束之前等待的时间
spring.activemq.close-timeout=15s
# 默认代理URL是否应该在内存中。如果指定了显式代理，则忽略此值。
spring.activemq.in-memory=true
# 是否在回滚消息之前停止消息传递。这意味着当启用此命令时，消息顺序不会被保留。
spring.activemq.non-blocking-redelivery=false
# 等待消息发送响应的时间。设置为0等待永远。
spring.activemq.send-timeout=0ms
# 自定义队列名
spring.activemq.queue-name=active.queue
# 自定义主题名
spring.activemq.topic-name=active.topic
# 开启mq连接池
spring.activemq.pool.enabled=true
# 连接池最大连接数
spring.activemq.pool.max-connections=10
# 空闲的连接过期时间，默认30s
spring.activemq.pool.idle-timeout=30s

#mongodb
spring.data.mongodb.uri=mongodb://localhost:27016/mydb

#mysql
spring.datasource.ds1.jdbc-url=jdbc:mysql://localhost:3306/geekLearning?characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
spring.datasource.ds1.username=root
spring.datasource.ds1.password=123456
spring.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.ds2.jdbc-url=jdbc:mysql://localhost:3306/study-demo?characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
spring.datasource.ds2.username=root
spring.datasource.ds2.password=123456
spring.datasource.ds2.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
mybatis-plus.type-aliases-package=com.jwt.springboot.dao
mybatis-plus.mapper-locations=classpath:mapper/*Mapper.xml

#spring.jpa.database=mysql
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect

# jms:
#   pub-sub-domain: true  #默认情况下activemq提供的是queue模式，若要使用topic模式需要配置下面配置

# 是否信任所有包
#spring.activemq.packages.trust-all=
# 要信任的特定包的逗号分隔列表（当不信任所有包时）
#spring.activemq.packages.trusted=
# 当连接请求和池满时是否阻塞。设置false会抛“JMSException异常”。
#spring.activemq.pool.block-if-full=true
# 如果池仍然满，则在抛出异常前阻塞时间。
#spring.activemq.pool.block-if-full-timeout=-1ms
# 是否在启动时创建连接。可以在启动时用于加热池。
#spring.activemq.pool.create-connection-on-startup=true
# 是否用Pooledconnectionfactory代替普通的ConnectionFactory。
#spring.activemq.pool.enabled=false
# 连接过期超时。
#spring.activemq.pool.expiry-timeout=0ms
# 连接空闲超时
#spring.activemq.pool.idle-timeout=30s
# 连接池最大连接数
#spring.activemq.pool.max-connections=1
# 每个连接的有效会话的最大数目。
#spring.activemq.pool.maximum-active-session-per-connection=500
# 当有"JMSException"时尝试重新连接
#spring.activemq.pool.reconnect-on-exception=true
# 在空闲连接清除线程之间运行的时间。当为负数时，没有空闲连接驱逐线程运行。
#spring.activemq.pool.time-between-expiration-check=-1ms
# 是否只使用一个MessageProducer
#spring.activemq.pool.use-anonymous-producers=true